<assembly>
    <!--
       必须写，否则打包时会有 assembly ID must be present and non-empty 错误
       这个名字最终会追加到打包的名字的末尾，如项目的名字为 speed-api-0.0.1-SNAPSHOT,
       则最终生成的包名为 speed-api-0.0.1-SNAPSHOT-bin.zip
    -->
    <id>bin</id>
    <!-- 打包后的文件格式,可以是zip,tar,tar.gz,tar.bz2,jar,war,dir -->
    <formats>
        <format>dir</format>
        <format>tar.gz</format>
    </formats>
    <!-- 是否生成和项目名相同的根目录 -->
    <includeBaseDirectory>false</includeBaseDirectory>
    <baseDirectory>api</baseDirectory>

    <fileSets>
        <!-- 把项目相关的说明文件，打包进zip文件的根目录 -->
        <fileSet>
            <directory>${basedir}</directory>
            <outputDirectory/>
            <includes>
                <include>README*</include>
                <include>LICENSE*</include>
                <include>NOTICE*</include>
            </includes>
        </fileSet>

        <!-- 把项目的配置文件，打包进 config 目录 -->
        <fileSet>
            <directory>${basedir}/src/main/resources</directory>
            <outputDirectory>config</outputDirectory>
            <includes>
                <include>*.y*ml</include>
                <include>*.properties</include>
                <include>*.xml</include>
            </includes>
            <excludes>
                <exclude>*-dev.y*ml</exclude>
            </excludes>
        </fileSet>

        <!-- 把项目的脚本文件，打包进 bin 目录 -->
<!--        <fileSet>-->
<!--            <directory>${basedir}/src/main/bin</directory>-->
<!--            <outputDirectory>bin</outputDirectory>-->
<!--        </fileSet>-->

        <!-- 把项目自己编译出来的jar文件，打包进zip文件的根目录 -->
        <fileSet>
            <directory>${build.directory}</directory>
            <outputDirectory/>
            <includes>
                <include>*.jar</include>
            </includes>
        </fileSet>
    </fileSets>
    <dependencySets>
<!--        <dependencySet>-->
<!--            &lt;!&ndash; 不使用项目的artifact，第三方jar不要解压，打包进zip文件的lib目录 &ndash;&gt;-->
<!--            <useProjectArtifact>false</useProjectArtifact>-->
<!--            <outputDirectory>libs</outputDirectory>-->
<!--            <unpack>false</unpack>-->
<!--            &lt;!&ndash; 将scope为runtime的依赖包打包到lib目录下。 &ndash;&gt;-->
<!--            <scope>runtime</scope>-->
<!--        </dependencySet>-->
    </dependencySets>
</assembly>
